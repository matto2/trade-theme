{% comment %}
  Renders inventory information with TOMIT integration and location-based stock levels

  Accepts:
  - product: {Object} Product Liquid object (required)
  - current_variant: {Object} Current variant object (optional)
  - block: {Object} Block object with settings (optional)

  Usage:
  {% render 'inventory-locations', product: product, current_variant: current_variant, block: block %}
{% endcomment %}

{%- liquid
  if current_variant
    assign target_variant = current_variant
  else
    assign target_variant = product.selected_or_first_available_variant
  endif
-%}

<div class="product__inventory-locations" {{ block.shopify_attributes | default: '' }}>
  {% comment %} Standard Shopify Inventory Display {% endcomment %}
  {% if target_variant.inventory_management == "shopify" and target_variant.inventory_policy != "continue" %}
    <div class="inventory-status">
      <div id="variant-inventory" class="inventory-display">
        {% if block.settings.show_exact_quantity and target_variant.inventory_quantity > 0 %}
          <span class="inventory-quantity">
            {% if block.settings.custom_in_stock_message != blank %}
              {{ block.settings.custom_in_stock_message | replace: '[quantity]', target_variant.inventory_quantity }}
            {% else %}
              We have {{ target_variant.inventory_quantity }} in stock.
            {% endif %}
          </span>
        {% elsif target_variant.inventory_quantity > 0 %}
          <span class="inventory-available">
            {% if block.settings.custom_available_message != blank %}
              {{ block.settings.custom_available_message }}
            {% else %}
              This product is available.
            {% endif %}
          </span>
        {% else %}
          <span class="inventory-unavailable">
            {% if block.settings.custom_out_of_stock_message != blank %}
              {{ block.settings.custom_out_of_stock_message }}
            {% else %}
              This product is currently out of stock.
            {% endif %}
          </span>
        {% endif %}
      </div>
    </div>
  {% else %}
    <div class="inventory-status">
      <span class="inventory-available">
        {% if block.settings.custom_available_message != blank %}
          {{ block.settings.custom_available_message }}
        {% else %}
          This product is available.
        {% endif %}
      </span>
    </div>
  {% endif %}

  {% comment %} TOMIT Integration {% endcomment %}
  {% unless target_variant.inventory_management == null %}
    {% if template == "product" %}
      {% assign inventory = product.metafields.tomit_inventory %}
      {% if inventory.inventory_json.size > 0 %}
        <script>
          document.addEventListener('DOMContentLoaded', function() {
            // Wait for TOMIT to load
            if (typeof tomitProductInventoryInfo !== 'undefined') {
              tomitProductInventoryInfo.productJson = `{{inventory.inventory_json | json}}`;
            } else {
              // If TOMIT isn't loaded yet, listen for the event
              document.addEventListener('tomitLoaded', function(e) {
                tomitProductInventoryInfo.productJson = `{{inventory.inventory_json | json}}`;
              });
            }
          });
        </script>
      {% endif %}
    {% endif %}

    {% comment %} TOMIT Inventory Location Container {% endcomment %}
    <div id="inventoryLocationInformation" class="inventory-locations">
      {% if block.settings.show_loading_message %}
        <span class="inventoryLocationLoading">
          {% if block.settings.loading_message != blank %}
            {{ block.settings.loading_message }}
          {% else %}
            Loading inventory information...
          {% endif %}
        </span>
      {% endif %}
    </div>

    {% comment %} Fallback inventory display for when TOMIT data isn't available {% endcomment %}
    <div class="inventory-fallback" style="display: none;">
      <div class="inventory-note">
        {% if block.settings.fallback_message != blank %}
          {{ block.settings.fallback_message }}
        {% else %}
          Contact us for current inventory levels and availability.
        {% endif %}
      </div>
    </div>
  {% endunless %}
</div>

<style>
  .product__inventory-locations {
    margin: 1rem 0;
    font-size: 0.95em;
  }

  .inventory-status {
    margin-bottom: 0.5rem;
  }

  .inventory-quantity {
    color: #28a745;
    font-weight: 500;
  }

  .inventory-available {
    color: #28a745;
    font-weight: 500;
  }

  .inventory-unavailable {
    color: #dc3545;
    font-weight: 500;
  }

  .inventory-locations {
    margin-top: 0.75rem;
    padding: 0.75rem;
    background: #f8f9fa;
    border-radius: 4px;
    border: 1px solid #e9ecef;
  }

  .inventoryLocationLoading {
    display: inline-block;
    color: #6c757d;
    font-style: italic;
    position: relative;
  }

  .inventoryLocationLoading::after {
    content: '...';
    animation: loading-dots 1.5s infinite;
  }

  @keyframes loading-dots {
    0%, 20% { content: '.'; }
    40% { content: '..'; }
    60%, 100% { content: '...'; }
  }

  .inventory-fallback {
    margin-top: 0.75rem;
    padding: 0.75rem;
    background: #fff3cd;
    border: 1px solid #ffeaa7;
    border-radius: 4px;
  }

  .inventory-note {
    color: #856404;
    font-size: 0.9em;
  }

  /* TOMIT Integration Styles */
  #inventoryLocationInformation .tomit-location {
    margin: 0.5rem 0;
    padding: 0.5rem;
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 3px;
  }

  #inventoryLocationInformation .tomit-location-name {
    font-weight: 600;
    color: #333;
  }

  #inventoryLocationInformation .tomit-stock-level {
    color: #28a745;
    margin-left: 0.5rem;
  }

  #inventoryLocationInformation .tomit-low-stock {
    color: #ffc107;
  }

  #inventoryLocationInformation .tomit-out-of-stock {
    color: #dc3545;
  }

  /* Responsive Design */
  @media screen and (max-width: 749px) {
    .product__inventory-locations {
      font-size: 0.9em;
    }

    .inventory-locations {
      padding: 0.5rem;
    }
  }
</style>

{% comment %} Enhanced variant change detection for TOMIT {% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Listen for variant changes to update TOMIT inventory
    if (typeof VariantSelects !== 'undefined') {
      document.addEventListener('variant:change', function(event) {
        const variant = event.detail.variant;
        if (variant && window.tomitProductInventoryInfo) {
          // Trigger TOMIT inventory update for new variant
          window.tomitProductInventoryInfo.updateVariant(variant.id);
        }
      });
    }

    // Fallback timer - if TOMIT doesn't load in 10 seconds, show fallback
    setTimeout(function() {
      const loadingElement = document.querySelector('.inventoryLocationLoading');
      const fallbackElement = document.querySelector('.inventory-fallback');

      if (loadingElement && loadingElement.style.display !== 'none' && fallbackElement) {
        loadingElement.style.display = 'none';
        fallbackElement.style.display = 'block';
      }
    }, 10000);
  });
</script>